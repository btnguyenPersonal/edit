diff --git a/log b/log
deleted file mode 100644
index d683d9b..0000000
--- a/log
+++ /dev/null
@@ -1,370 +0,0 @@
-commandLine {
-    
-    0
-    0
-}
-findFile {
-    
-    0
-    0
-}
-grep {
-    
-    0
-    0
-}
-name {
-    
-    0
-    0
-}
-replace {
-    
-    0
-    0
-}
-search {
-    
-    0
-    0
-}
-visualType 0
-dontRecordKey 0
-dontSave 0
-fileExplorerOpen 0
-playingCommand 0
-recording 0
-replacing 0
-runningAsRoot 0
-searchFail 0
-searching 0
-selectAll 0
-showAllGrep 0
-showFileStack 0
-showGrep 0
-blameSize 65
-buildErrorIndex 0
-fileExplorerIndex 0
-fileExplorerWindowLine 0
-historyPosition 2
-lastSave 2
-maxY 30
-maxX 100
-buildDir .
-commentSymbol //
-filename longtest.js
-grepPath 
-keys :12<C-J>ddPP
-prevKeys 
-status 
-motion []
-findFileOutput []
-blame []
-data [
-    #include <X11/XF86keysym.h>
-    
-    /* See LICENSE file for copyright and license details. */
-    
-    /* appearance */
-    static const unsigned int borderpx  = 1;        /* border pixel of windows */
-    static const unsigned int snap      = 32;       /* snap pixel */
-    static const int showbar            = 1;        /* 0 means no bar */
-    static const int topbar             = 1;        /* 0 means bottom bar */
-    static const char *fonts[]          = { "DejaVuSansM Nerd Font:size=16" };
-    static const char dmenufont[]       = "DejaVuSansM Nerd Font:size=16";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray2[]       = "#444444";
-    static const char col_gray3[]       = "#bbbbbb";
-    static const char col_gray4[]       = "#eeeeee";
-    static const char col_cyan[]        = "#006400";
-    static const char *colors[][3]      = {
-    	/*               fg         bg         border   */
-    	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-    	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
-    };
-    
-    /* tagging */
-    static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
-    
-    static const Rule rules[] = {
-    	/* xprop(1):
-    	 *	WM_CLASS(STRING) = instance, class
-    	 *	WM_NAME(STRING) = title
-    	 */
-    	/* class      instance    title       tags mask     isfloating   monitor */
-    	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-    	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
-    };
-    
-    /* layout(s) */
-    static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
-    static const int nmaster     = 1;    /* number of clients in master area */
-    static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
-    static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen window */
-    
-    static const Layout layouts[] = {
-    	/* symbol     arrange function */
-    	{ "[]=",      tile },    /* first entry is default */
-    	{ "><>",      NULL },    /* no layout function means floating behavior */
-    	{ "[M]",      monocle },
-    };
-    
-    /* key definitions */
-    #define MODKEY Mod4Mask
-    #define TAGKEYS(KEY,TAG) \
-    	{ 0,                            KEY,      view,           {.ui = 1 << TAG} }, \
-    	{ ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
-    	{ ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
-    	{ ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
-    
-    /* helper for spawning shell commands in the pre dwm-5.0 fashion */
-    #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
-    
-    /* commands */
-    static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-    static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-    static const char *termcmd[] = { "st", NULL };
-    
-    static const char *inclight[] = { "sudo", "brightnessctl", "set", "10%+", NULL };
-    static const char *declight[] = { "sudo", "brightnessctl", "set", "10%-", NULL };
-    static const char *mutecmd[] = { "amixer", "-q", "set", "Master", "toggle",  NULL };
-    static const char *volupcmd[] = { "amixer", "-q", "set", "Master", "10%+", "unmute", NULL };
-    static const char *voldowncmd[] = { "amixer", "-q", "set", "Master", "10%-", "unmute", NULL };
-    static const char *statusbar[] = { "/bin/statusbar", NULL };
-    
-    static const Key keys[] = {
-    	/* modifier                     key        function        argument */
-    	{ ControlMask,                  XK_space,  spawn,          {.v = dmenucmd } },
-    	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-    	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-    	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-    	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-    	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-    	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-    	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
-    	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-    	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-    	{ MODKEY,                       XK_b,      togglebar,      {0} },
-    	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-    	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-        { 0,                            XF86XK_AudioMute, spawn, {.v = mutecmd } },
-        { 0,                            XF86XK_AudioMute, spawn, {.v = statusbar } },
-        { 0,                            XF86XK_AudioLowerVolume, spawn, {.v = voldowncmd } },
-        { 0,                            XF86XK_AudioLowerVolume, spawn, {.v = statusbar } },
-        { 0,                            XF86XK_AudioRaiseVolume, spawn, {.v = volupcmd } },
-        { 0,                            XF86XK_AudioRaiseVolume, spawn, {.v = statusbar } },
-        { 0,                            XF86XK_MonBrightnessUp,     spawn,      {.v = inclight } },
-        { 0,                            XF86XK_MonBrightnessUp,     spawn,      {.v = statusbar } },
-        { 0,                            XF86XK_MonBrightnessDown,   spawn,      {.v = declight } },
-        { 0,                            XF86XK_MonBrightnessDown,   spawn,      {.v = statusbar } },
-    	TAGKEYS(                        XK_F1,                     0)
-    	TAGKEYS(                        XK_F2,                     1)
-    	TAGKEYS(                        XK_F3,                     2)
-    	TAGKEYS(                        XK_F4,                     3)
-    	TAGKEYS(                        XK_F5,                     4)
-    	TAGKEYS(                        XK_F6,                     5)
-    	TAGKEYS(                        XK_F7,                     6)
-    	TAGKEYS(                        XK_F8,                     7)
-    	TAGKEYS(                        XK_F9,                     8)
-    	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
-    };
-    
-    /* button definitions */
-    /* click can be ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
-    static const Button buttons[] = {
-    	/* click                event mask      button          function        argument */
-    	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
-    	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
-    	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
-    	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
-    	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
-    	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
-    	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
-    	{ ClkTagBar,            0,              Button1,        view,           {0} },
-    	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
-    	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
-    	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
-    };
-    
-    
-]
-dotCommand [
-    P
-]
-fileStack [
-    longtest.js
-]
-macroCommand []
-previousState [
-    #include <X11/XF86keysym.h>
-    
-    /* See LICENSE file for copyright and license details. */
-    
-    /* appearance */
-    static const unsigned int borderpx  = 1;        /* border pixel of windows */
-    static const unsigned int snap      = 32;       /* snap pixel */
-    static const int showbar            = 1;        /* 0 means no bar */
-    static const int topbar             = 1;        /* 0 means bottom bar */
-    static const char *fonts[]          = { "DejaVuSansM Nerd Font:size=16" };
-    static const char dmenufont[]       = "DejaVuSansM Nerd Font:size=16";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray1[]       = "#222222";
-    static const char col_gray2[]       = "#444444";
-    static const char col_gray3[]       = "#bbbbbb";
-    static const char col_gray4[]       = "#eeeeee";
-    static const char col_cyan[]        = "#006400";
-    static const char *colors[][3]      = {
-    	/*               fg         bg         border   */
-    	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-    	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
-    };
-    
-    /* tagging */
-    static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
-    
-    static const Rule rules[] = {
-    	/* xprop(1):
-    	 *	WM_CLASS(STRING) = instance, class
-    	 *	WM_NAME(STRING) = title
-    	 */
-    	/* class      instance    title       tags mask     isfloating   monitor */
-    	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-    	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
-    };
-    
-    /* layout(s) */
-    static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
-    static const int nmaster     = 1;    /* number of clients in master area */
-    static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
-    static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen window */
-    
-    static const Layout layouts[] = {
-    	/* symbol     arrange function */
-    	{ "[]=",      tile },    /* first entry is default */
-    	{ "><>",      NULL },    /* no layout function means floating behavior */
-    	{ "[M]",      monocle },
-    };
-    
-    /* key definitions */
-    #define MODKEY Mod4Mask
-    #define TAGKEYS(KEY,TAG) \
-    	{ 0,                            KEY,      view,           {.ui = 1 << TAG} }, \
-    	{ ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
-    	{ ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
-    	{ ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
-    
-    /* helper for spawning shell commands in the pre dwm-5.0 fashion */
-    #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
-    
-    /* commands */
-    static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-    static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-    static const char *termcmd[] = { "st", NULL };
-    
-    static const char *inclight[] = { "sudo", "brightnessctl", "set", "10%+", NULL };
-    static const char *declight[] = { "sudo", "brightnessctl", "set", "10%-", NULL };
-    static const char *mutecmd[] = { "amixer", "-q", "set", "Master", "toggle",  NULL };
-    static const char *volupcmd[] = { "amixer", "-q", "set", "Master", "10%+", "unmute", NULL };
-    static const char *voldowncmd[] = { "amixer", "-q", "set", "Master", "10%-", "unmute", NULL };
-    static const char *statusbar[] = { "/bin/statusbar", NULL };
-    
-    static const Key keys[] = {
-    	/* modifier                     key        function        argument */
-    	{ ControlMask,                  XK_space,  spawn,          {.v = dmenucmd } },
-    	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-    	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-    	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-    	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-    	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-    	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-    	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
-    	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-    	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-    	{ MODKEY,                       XK_b,      togglebar,      {0} },
-    	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-    	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-        { 0,                            XF86XK_AudioMute, spawn, {.v = mutecmd } },
-        { 0,                            XF86XK_AudioMute, spawn, {.v = statusbar } },
-        { 0,                            XF86XK_AudioLowerVolume, spawn, {.v = voldowncmd } },
-        { 0,                            XF86XK_AudioLowerVolume, spawn, {.v = statusbar } },
-        { 0,                            XF86XK_AudioRaiseVolume, spawn, {.v = volupcmd } },
-        { 0,                            XF86XK_AudioRaiseVolume, spawn, {.v = statusbar } },
-        { 0,                            XF86XK_MonBrightnessUp,     spawn,      {.v = inclight } },
-        { 0,                            XF86XK_MonBrightnessUp,     spawn,      {.v = statusbar } },
-        { 0,                            XF86XK_MonBrightnessDown,   spawn,      {.v = declight } },
-        { 0,                            XF86XK_MonBrightnessDown,   spawn,      {.v = statusbar } },
-    	TAGKEYS(                        XK_F1,                     0)
-    	TAGKEYS(                        XK_F2,                     1)
-    	TAGKEYS(                        XK_F3,                     2)
-    	TAGKEYS(                        XK_F4,                     3)
-    	TAGKEYS(                        XK_F5,                     4)
-    	TAGKEYS(                        XK_F6,                     5)
-    	TAGKEYS(                        XK_F7,                     6)
-    	TAGKEYS(                        XK_F8,                     7)
-    	TAGKEYS(                        XK_F9,                     8)
-    	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
-    };
-    
-    /* button definitions */
-    /* click can be ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
-    static const Button buttons[] = {
-    	/* click                event mask      button          function        argument */
-    	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
-    	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
-    	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
-    	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
-    	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
-    	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
-    	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
-    	{ ClkTagBar,            0,              Button1,        view,           {0} },
-    	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
-    	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
-    	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
-    };
-    
-    
-]
-history [
-    [
-        22 -static const char col_gray1[]       = "#222222";
-    ]
-    [
-        22 +static const char col_gray1[]       = "#222222";
-    ]
-    [
-        23 +static const char col_gray1[]       = "#222222";
-    ]
-]
-visual.row 11
-visual.col 0
-windowPosition.row 0
-windowPosition.col 0
-col 0
-fileExplorerSize 40
-fileStackIndex 0
-harpoonIndex 0
-lineNumSize 5
-row 11
diff --git a/src/util/render.cpp b/src/util/render.cpp
index 4f6e8e9..ac437e0 100644
--- a/src/util/render.cpp
+++ b/src/util/render.cpp
@@ -199,6 +199,7 @@ std::string getDisplayModeName(State *state)
 
 int32_t renderStatusBar(State *state)
 {
+	int32_t cursor = -1;
 	std::string prefix;
 	std::vector<Pixel> pixels = std::vector<Pixel>();
 
@@ -248,9 +249,9 @@ int32_t renderStatusBar(State *state)
 			std::string s;
 			if (state->harpoonFiles.count(i) > 0) {
 				bool current = state->harpoonFiles[i] == state->filename && state->harpoonIndex == i;
-				insertPixels(state, &pixels, '[', current ? ORANGE : GREY);
-				insertPixels(state, &pixels, std::to_string(i + 1), current ? YELLOW : WHITE);
-				insertPixels(state, &pixels, ']', current ? ORANGE : GREY);
+				insertPixels(state, &pixels, '[', current ? invertColor(WHITE) : GREY);
+				insertPixels(state, &pixels, std::to_string(i + 1), current ? invertColor(WHITE) : WHITE);
+				insertPixels(state, &pixels, ']', current ? invertColor(WHITE) : GREY);
 			} else {
 				insertPixels(state, &pixels, "[ ]", GREY);
 			}
@@ -261,13 +262,16 @@ int32_t renderStatusBar(State *state)
 			for (uint32_t i = 0; i < state->macroCommand.size(); i++) {
 				s += state->macroCommand[i];
 			}
-			insertPixels(state, &pixels, setStringToLength(s, 60, true), RED);
+			insertPixels(state, &pixels, std::string("recording: ") + setStringToLength(s, 60, true), RED);
 		} else {
-			insertPixels(state, &pixels, setStringToLength(state->keys, 30, false), WHITE);
+			insertPixels(state, &pixels, setStringToLength(state->keys, 30, false), GREY);
 		}
 		insertPixels(state, &pixels, ' ', WHITE);
 		prefix = "/";
 		std::string displayQuery = state->search.query;
+		if (state->mode == SEARCH) {
+			cursor = prefix.length() + pixels.size() + state->search.cursor;
+		}
 		for (size_t i = 0; i < displayQuery.length(); ++i) {
 			if (displayQuery[i] == '\n') {
 				displayQuery.replace(i, 1, "\\n");
@@ -276,6 +280,7 @@ int32_t renderStatusBar(State *state)
 		}
 		insertPixels(state, &pixels, prefix + displayQuery, state->searchFail ? RED : GREEN);
 		if (state->replacing) {
+			cursor = prefix.length() + pixels.size() + state->replace.cursor;
 			insertPixels(state, &pixels, prefix + state->replace.query, MAGENTA);
 			renderPixels(state, 0, 0, pixels);
 		}
@@ -293,7 +298,7 @@ int32_t renderStatusBar(State *state)
 		     state->lastSave != state->historyPosition ? GREY : WHITE);
 
 	renderPixels(state, 0, 0, pixels);
-	return -1;
+	return cursor;
 }
 
 int32_t getColorFromChar(char c)
diff --git a/tasks.md b/tasks.md
index a792eb8..b6baeb6 100644
--- a/tasks.md
+++ b/tasks.md
@@ -1,4 +1,9 @@
 ## tasks
+- have a cutoff version for renderPixels (use for fileStack)
+- grep when ctrl g, not checking before for valid ones
+- fix expand file not there anymore
+- add recording prefix
+- color keys based on mode
 - inspect memory leaks using new
 ```
     Object * object1 = new Object(); //A new object is allocated on the heap
