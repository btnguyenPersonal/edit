diff --git a/src/keybinds/sendShortcutKeys.cpp b/src/keybinds/sendShortcutKeys.cpp
index fb3707b..2c36c2b 100644
--- a/src/keybinds/sendShortcutKeys.cpp
+++ b/src/keybinds/sendShortcutKeys.cpp
@@ -134,6 +134,8 @@ void sendShortcutKeys(State *state, int32_t c)
 		state->prevKeys = "";
 	} else if (state->prevKeys == "g" && c == 'g') {
 		state->row = 0;
+		state->col = getNormalizedCol(state, state->hardCol);
+		state->skipSetHardCol = true;
 		state->prevKeys = "";
 	} else if (state->prevKeys == "g" && (c == 'k' || c == KEY_UP)) {
 		upVisual(state);
@@ -455,6 +457,8 @@ void sendShortcutKeys(State *state, int32_t c)
 		state->changeFile(state->filename);
 	} else if (c == 'G') {
 		state->row = state->data.size() - 1;
+		state->col = getNormalizedCol(state, state->hardCol);
+		state->skipSetHardCol = true;
 	} else if (c == ctrl('z')) {
 		if (state->jumplist.index > 0) {
 			state->jumplist.index--;
diff --git a/src/util/helper.cpp b/src/util/helper.cpp
index 3690ea8..60e12f9 100644
--- a/src/util/helper.cpp
+++ b/src/util/helper.cpp
@@ -1627,25 +1627,26 @@ void centerScreen(State *state)
 	}
 }
 
-// TODO fix hardCol
 void upScreen(State *state)
 {
 	if (state->row > 0) {
 		state->row -= 1;
 		state->windowPosition.row -= 1;
+		state->col = getNormalizedCol(state, state->hardCol);
+		state->skipSetHardCol = true;
 	}
 }
 
-// TODO fix hardCol
 void downScreen(State *state)
 {
 	if (state->row < state->data.size() - 1) {
 		state->row += 1;
 		state->windowPosition.row += 1;
+		state->col = getNormalizedCol(state, state->hardCol);
+		state->skipSetHardCol = true;
 	}
 }
 
-// TODO fix hardCol
 void upHalfScreen(State *state)
 {
 	for (uint32_t i = 0; i < state->maxY / 2; i++) {
@@ -1654,9 +1655,10 @@ void upHalfScreen(State *state)
 			state->windowPosition.row -= 1;
 		}
 	}
+	state->col = getNormalizedCol(state, state->hardCol);
+	state->skipSetHardCol = true;
 }
 
-// TODO fix hardCol
 void downHalfScreen(State *state)
 {
 	for (uint32_t i = 0; i < state->maxY / 2; i++) {
@@ -1665,13 +1667,10 @@ void downHalfScreen(State *state)
 			state->windowPosition.row += 1;
 		}
 	}
+	state->col = getNormalizedCol(state, state->hardCol);
+	state->skipSetHardCol = true;
 }
 
-// TODO make this stored in state and kept between switching archives
-// use this to keep file-global where the cursor should be, this should update
-// each time the col has changed manually (maybe in cleanup)
-// have state->col change rapidly, and this be set
-// idk if have a flag when manually changing to keep from changing in cleanup
 uint32_t getNormalizedCol(State* state, uint32_t hardCol)
 {
 	if (state->options.indent_style != "tab") {
@@ -1681,7 +1680,7 @@ uint32_t getNormalizedCol(State* state, uint32_t hardCol)
 	int32_t output = 0;
 	for (uint32_t i = 0; i < state->data[state->row].length() && (int32_t) i < tmpHardCol; i++) {
 		if (i < state->data[state->row].length() && state->data[state->row][i] == '\t') {
-			tmpHardCol -= 7;
+			tmpHardCol -= (state->options.indent_size - 1);
 			if ((int32_t) i < tmpHardCol) {
 				output++;
 			} else {
@@ -1706,7 +1705,6 @@ void up(State *state)
 	}
 }
 
-// TODO fix hardCol
 void upVisual(State *state)
 {
 	auto visualCol = state->col;
@@ -1716,6 +1714,7 @@ void upVisual(State *state)
 	if (visualCol < state->maxX - getLineNumberOffset(state)) {
 		if (state->row > 0) {
 			state->row -= 1;
+			state->col = getNormalizedCol(state, state->hardCol);
 			state->col += (state->maxX - getLineNumberOffset(state)) *
 				      (state->data[state->row].length() / (state->maxX - getLineNumberOffset(state)));
 		}
@@ -1748,12 +1747,12 @@ bool isOnLastVisualLine(State *state)
 	return state->col > lastLineStarts;
 }
 
-// TODO fix hardCol
 void downVisual(State *state)
 {
 	if (isOnLastVisualLine(state)) {
 		if (state->row < state->data.size() - 1) {
 			state->row += 1;
+			state->col = getNormalizedCol(state, state->hardCol);
 			state->col = state->col % (state->maxX - getLineNumberOffset(state));
 		}
 		if (isOffScreenVertical(state)) {
diff --git a/src/util/state.cpp b/src/util/state.cpp
index dac1fc8..23c9721 100644
--- a/src/util/state.cpp
+++ b/src/util/state.cpp
@@ -290,6 +290,7 @@ void State::changeFile(std::string filename)
 			this->archives[i].windowPosition = this->windowPosition;
 			this->archives[i].row = this->row;
 			this->archives[i].col = this->col;
+			this->archives[i].hardCol = this->hardCol;
 			this->archives[i].jumplist = this->jumplist;
 			found = true;
 			break;
@@ -305,6 +306,7 @@ void State::changeFile(std::string filename)
 			this->windowPosition,
 			this->row,
 			this->col,
+			this->hardCol,
 			this->jumplist,
 		});
 	}
@@ -321,6 +323,7 @@ void State::changeFile(std::string filename)
 			this->windowPosition = archive.windowPosition;
 			this->row = archive.row;
 			this->col = archive.col;
+			this->hardCol = archive.col;
 			this->jumplist = archive.jumplist;
 			this->mode = SHORTCUTS;
 			return;
@@ -422,6 +425,7 @@ State::State()
 	this->visual.col = 0;
 	this->row = 0;
 	this->col = 0;
+	this->hardCol = 0;
 	this->search = { std::string(""), 0, 0 };
 	this->replace = { std::string(""), 0, 0 };
 	this->commandLine = { std::string(""), 0, 0 };
diff --git a/src/util/state.h b/src/util/state.h
index d21b691..3809d24 100644
--- a/src/util/state.h
+++ b/src/util/state.h
@@ -68,6 +68,7 @@ struct Archive {
 	struct Position windowPosition;
 	uint32_t row;
 	uint32_t col;
+	uint32_t hardCol;
 	Jumplist jumplist;
 };
 
