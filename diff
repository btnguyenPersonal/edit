diff --git a/Makefile b/Makefile
index 2d9def3..207d4b9 100644
--- a/Makefile
+++ b/Makefile
@@ -1,6 +1,6 @@
 CC = g++-13
 
-NPROCS = $(shell nproc)
+NPROCS = $(shell nproc 2>/dev/null || sysctl -n hw.logicalcpu)
 MAKEFLAGS += --jobs=$(NPROCS)
 
 CFLAGS = -Wall -O2
diff --git a/formatter.js b/formatter.js
new file mode 100644
index 0000000..a24537b
--- /dev/null
+++ b/formatter.js
@@ -0,0 +1,26 @@
+module.exports = (results, data) => {
+    var results = results || [];
+
+    var summary = results.reduce(
+        (seq, current) => {
+            current.messages.forEach((msg) => {
+                if (msg.severity === 2) {
+                    seq.errors.push({
+                        filePath: current.filePath,
+                        message: msg.message,
+                        line: msg.line,
+                        column: msg.column
+                    });
+                }
+            });
+            return seq;
+        },
+        { errors: [] }
+    );
+
+    if (summary.errors.length > 0) {
+        return summary.errors.map((msg) => (
+            msg.filePath + ":" + msg.line + ":" + msg.column + ": Error: " + msg.message
+        )).join("\n");
+    }
+};
\ No newline at end of file
diff --git a/src/keybinds/sendShortcutKeys.cpp b/src/keybinds/sendShortcutKeys.cpp
index 8aae225..924baca 100644
--- a/src/keybinds/sendShortcutKeys.cpp
+++ b/src/keybinds/sendShortcutKeys.cpp
@@ -132,6 +132,19 @@ void sendShortcutKeys(State* state, int c) {
         } else if (islower(state->data[state->row][state->col])) {
             state->data[state->row][state->col] = std::toupper(state->data[state->row][state->col]);
         }
+    } else if (c == 'L') {
+        state->status = "Linting...";
+        renderScreen(state);
+        std::string command = "(cd ";
+        command += state->buildDir;
+        command += " && eslint . -f ~/formatter.js 2>&1 | grep ' Error: ')";
+        try {
+            state->buildErrorIndex = 0;
+            state->buildErrors = runCommandAndCaptureOutput(command);
+        } catch (const std::exception& e) {
+            state->status = "invalid build target: " + state->buildDir;
+        }
+        jumpToBuildError(state);
     } else if (c == ';') {
         state->status = "Building...";
         renderScreen(state);
diff --git a/tasks.md b/tasks.md
index 95798d5..610e3f3 100644
--- a/tasks.md
+++ b/tasks.md
@@ -11,6 +11,13 @@
 
 - figure out how to make build errors propogate in background
 
+- show red for build errors
+
+- make Lint spit out non-absolute paths
+    - prob can just make absolute paths set filename to relative path if start matches the relative path
+
+- fix autocomplete for off the screen
+
 ## BACKLOG
 - have viW for allowing everything except spaces
 - improve queries abstraction
@@ -26,7 +33,7 @@
 
 - for go to definition, go to the .d.ts file if needed
 - add mouse clicks
-- its sooooooooooooooooooooo slow wtffffffff
+    - its sooooooooooooooooooooo slow wtffffffff
 - add mouse drag
 - add mouse scroll
 - add python formatting
